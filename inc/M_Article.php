<?phpclass M_Article{//// Список всех статей//    public static function articles_all()    {        $db = M_Mysql::GetInstance(); // $db - object of the M_Mysql class        return $articles = $db->Select        ("SELECT * FROM articles ORDER BY id_article DESC");    }//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%//// Конкретная статья//    public static function articles_get($id_article)    {        $db = M_Mysql::GetInstance(); // $db - object of the M_Mysql class        return $article = $db->Select       ("SELECT * FROM articles WHERE  id_article ='" . $id_article . "'");    }//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%//// Добавить статью//    public  static function articles_new($title, $content)    {        $db = M_Mysql::GetInstance(); // $db - object of the M_Mysql class        // Подготовка.        $title = trim($title);        $content = trim($content);        // Проверка.        if ($title == '') {            $errors['error'] = 'Title is not specified';            return false;        } else {           return $id = $db -> Insert('articles',['title'=>$title, 'content'=>$content]);        }    }//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%//// Изменить статью//    public static function articles_edit($id_article, $title, $content,$views=null)    {//the data base articles_contents_storage one record updating        $db = M_Mysql::GetInstance(); // $db - object of the M_Mysql class        if ( $views == null ){            return $aff = $db -> Update('articles',[ 'title' => $title,                'content' => $content ],                "id_article ='" . $id_article . "'");        } else {            return $aff = $db -> Update('articles',[ 'title' => $title,                'content' => $content,'views' => $views  ],                "id_article ='" . $id_article . "'");        }    }//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%//// Удалить статью//    public  static function  articles_delete($id_article)    {//the data base articles_contents_storage one record delete        $db = M_Mysql::GetInstance(); // $db - object of the M_Mysql class        return $aff = $db -> Delete('articles',"id_article ='" . $id_article . "'");    }//// Add comment//    public static function articles_add_comment($id_article,$comment)    {//the data base articles_contents_storage one record updating        $db = M_Mysql::GetInstance(); // $db - object of the M_Mysql class        return $aff = $db -> Update('articles',['comment'=> $comment],            "id_article ='" . $id_article . "'");    }//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%    public static function templater($file, $params)    {        foreach ($params as $key => $value) {            $$key = $value;        }        ob_start();        include($file);        return ob_get_clean();    }//%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%// intro forming function    public static function intro($str, $len)    {        if (strlen($str) > $len) {            $del = [' ', '.', ',', '!', '-', '?'];            for ($i = $len; $i < strlen($str); $i++) {                if (in_array($str[$i], $del) && $i >= $len) {                    $index = $i;                    break;                }            }            return substr($str, 0, $index + 1);        } else return $str;    }// extraction of parameters functionpublic static function extraction(){    $params = [];    if ( !empty($_GET['q']) ) {        $info = explode('/', $_GET['q']); // for index.php?q=$1        foreach ($info as $key => $v) {            if ($v != '')                switch ($key) {                    case ('1'):                        $params ['c'] = $v;                        break;                    case ('2'):                        $params ['a'] = $v;                        break;                    case ('3'):                        if ( $v == 'forbidden' )                        { $_GET ['access'] = 'frbddn';}                        else                        { $params ['id'] = $v;}                        break;                    default:                        break;                }        }    }    return $params;}}